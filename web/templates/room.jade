html(xmlns='http://www.w3.org/1999/xhtml')
  head
    meta(http-equiv='Content-Type', content='text/html; charset=UTF-8')
    title May the force be with you, Luke - OnPlay
    link(rel='stylesheet', href='/resources/css/bootstrap.min.css')
    link(rel='stylesheet', href='/resources/css/style.css')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    script(type='text/javascript').
          window.onload = function () {
          document.getElementById('link').value = window.location.toString().replace('http://', '');
          };
          var posX;
          var socket;
          var currentTime;
          var playerStatusGot = "";
          var playerStatusSetted;
          var socketInterval;
          var duration;
          var percentVideo;
          if (!window.WebSocket) {
          window.WebSocket = window.MozWebSocket;
          }
          if (window.WebSocket) {
          socket = new WebSocket("ws://" + window.location.host + "/websocket" + window.location.pathname);
          socket.onmessage = function (event) {
          var parsed = JSON.parse(event.data);
          if (parsed.method == "Play") {
          playerPlay();
          } else if (parsed.method == "Pause") {
          playerPause();
          } else if (parsed.method == "CurrentTime") {
          if (parsed.value == currentTime) {} else {
          playerSeeked(parsed.value);
          }
          } else if (parsed.method == "CountUsersOnline") {
          document.getElementById('watchers').innerHTML = parsed.value;
          }
          else if(parsed.method == "Buffering"){
          playerBuffering();
          }
          };
          socket.onopen = function (event) {
          send(JSON.stringify({
          'method': 'UserOnline',
          'value': ''
          }));
          };
          socket.onclose = function (event) {
          socket = new WebSocket("ws://" + window.location.host + "/websocket" + window.location.pathname);
          };
          } else {
          alert("Your browser does not support Web Socket.");
          }
          function send(message) {
          if (!window.WebSocket) {
          return;
          }
          if (socket.readyState == WebSocket.OPEN) {
          socket.send(message);
          } else {
          alert("The socket is not open.");
          }
          }
          function Play() {
          send(JSON.stringify({
          'method': 'Play',
          'value': ''
          }));
          }
          function Pause() {
          send(JSON.stringify({
          'method': 'Pause',
          'value': ''
          }));
          }
          function Seeked(seconds) {
          send(JSON.stringify({
          'method': 'CurrentTime',
          'value': seconds
          }));
          }
          function Buffering() {
          send(JSON.stringify({
          'method': 'Buffering',
          'value': ''
          }));
          }

    script.
          // 2. This code loads the IFrame Player API code asynchronously.
          var tag = document.createElement('script');
          tag.src = "https://www.youtube.com/iframe_api";
          var firstScriptTag = document.getElementsByTagName('script')[0];
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
          // 3. This function creates an <iframe> (and YouTube player)
          //    after the API code downloads.
          var player;
          function onYouTubeIframeAPIReady() {
          player = new YT.Player('player', {
          height: '100%',
          width: '100%',
          videoId: 'вставьте ссылку в поле выше',
          playerVars: { 'controls': 0, 'rel': 0, 'disablekb': 1, 'fs': 0, 'showinfo': 0},
          events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
          }
          });
          }
          // 4. The API will call this function when the video player is ready.
          function onPlayerReady(event) {
          duration = player.getDuration();
          document.getElementById('duration').innerHTML = fromSeconds(duration);
          percentVideo = duration / 100;
          document.getElementsByClassName('timeBar')[2].style.width = player.getVolume() + '%';
          setInterval(requestBufferingTime, 100);
          }
          // 5. The API calls this function when the player's state changes.
          //    The function indicates that when playing a video (state=1),
          //    the player should play for six seconds and then stop.
          function onPlayerStateChange(event) {
          if (event.data == YT.PlayerState.PLAYING) {
          document.getElementsByClassName('play')[0].style.display = 'none';
          document.getElementsByClassName('pause')[0].style.display = 'block';
          if(playerStatusGot == ""){
          Play();
          }
          else{
          playerStatusGot = "";
          }
          }
          if(event.data == YT.PlayerState.PAUSED){
          document.getElementsByClassName('pause')[0].style.display = 'none';
          document.getElementsByClassName('play')[0].style.display = 'block';
          if(playerStatusGot == ""){
          Pause();
          }
          else{
          playerStatusGot = "";
          }
          }
          if(event.data == YT.PlayerState.BUFFERING){
          Pause();
          playerStatusGot = "";
          }
          }
          function playerPlay(){
          playerStatusGot = "Play";
          player.playVideo();
          }
          function playerPause(){
          if(player.getPlayerState() !== 3){
          playerStatusGot = "Pause";
          player.pauseVideo();
          }
          }
          function playerSeeked(seconds){
          player.seekTo(seconds);
          document.getElementsByClassName('timeBar')[0].style.width = seconds / percentVideo + '%'
          }
          function playerBuffering(){
          playerStatusGot = "Buffering";
          player.pauseVideo();
          }
          function fromSeconds(secs) {
          var sec_num = parseInt(secs, 10); // don't forget the second param
          var hours   = Math.floor(sec_num / 3600);
          var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
          var seconds = sec_num - (hours * 3600) - (minutes * 60);
          if (hours   < 10) {hours   = "0"+hours;}
          if (minutes < 10) {minutes = "0"+minutes;}
          if (seconds < 10) {seconds = "0"+seconds;}
          if(hours == 0){
          var time = minutes+':'+seconds;
          }else{
          var time = hours+':'+minutes+':'+seconds;
          }
          return time;
          }

  body
    header
      .row
        nav.navbar-default.menu
          .container
            .navbar-header
              a.navbar-brand(href='/', style='padding: 0 0 0 15px;')
                svg(xmlns='http://www.w3.org/2000/svg', width='100', height='50')
                  g
                    title background
                    rect#canvas_background(fill='none', height='52', width='102', y='-1', x='-1')
                    g#canvasGrid(display='none', overflow='visible', y='0', x='0', height='100%', width='100%')
                      rect(fill='url(#gridpattern)', stroke-width='0', y='0', x='0', height='100%', width='100%')
                  g
                    title Layer 1
                    ellipse#svg_6(stroke-dasharray='5,5', ry='19.062497', rx='19.062497', cy='23.9375', cx='47.375004', stroke-width='1.5', stroke='#ffffff', fill='#24b7f2')
                    line#svg_10(stroke-linecap='null', stroke-linejoin='null', y2='37.499998', x2='42.6875', y1='13.125002', x1='40.187501', stroke-width='1.5', stroke='#ffffff', fill='none')
                    line#svg_12(stroke-linecap='null', stroke-linejoin='null', y2='23.25', x2='58.062498', y1='13.250002', x1='40.187501', stroke-width='1.5', stroke='#ffffff', fill='none')
                    line#svg_13(stroke-linecap='null', stroke-linejoin='null', y2='36.624998', x2='42.8125', y1='23.125', x1='57.812498', stroke-width='1.5', stroke='#ffffff', fill='none')
                    text#svg_16(stroke='#000000', transform='matrix(0.9835922179106751,0,0,0.9779735803604126,-3.3495292350167274,0.8101592473685741) ', xml:space='preserve', text-anchor='left', font-family='Helvetica, Arial, sans-serif', font-size='24', y='30.874999', x='3.437507', stroke-dasharray='5,5', stroke-width='0', fill='#24b7f2') on
    .content
      .title
        .input-group.input-group-lg
          span#basic-addon1.input-group-addon
            | Сейчас смотрят
            svg#Views(alt='Людей в комнате', title='Людей в комнате', height='18px', version='1.1', viewbox='0 0 32 32', width='18px', xml:space='preserve', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink')
              g
                g
                  path(d='M16.333,13.759L16.333,13.759c-0.006-0.001-0.012-0.001-0.018-0.001c-0.006,0-0.012,0-0.018,0v0.001 c-1.21,0.03-2.183,1.02-2.183,2.237s0.972,2.208,2.183,2.237v0.002c0.006,0,0.012-0.002,0.018-0.002 c0.005,0,0.011,0.002,0.018,0.002v-0.002c1.219-0.029,2.183-1.02,2.183-2.237S17.552,13.789,16.333,13.759z')
                  path(d='M29.586,14.186c-2.76-2.246-7.407-5.51-13.253-5.621v0c-0.006,0-0.012,0-0.018,0c-0.006,0-0.012,0-0.018,0 v0C10.453,8.676,5.801,11.94,3.041,14.186c-0.132,0.107-1.036,0.8-1.051,1.686c-0.011,0.624,0.28,1.085,0.699,1.471 c2.255,2.181,7.176,6.059,13.609,6.087v0.002c0.006,0,0.012,0,0.018,0c0.005,0,0.011,0,0.018,0v-0.002 c6.445-0.028,11.351-3.906,13.607-6.087c0.419-0.386,0.709-0.847,0.697-1.471C30.621,14.986,29.719,14.293,29.586,14.186z M16.315,21.752c-3.162-0.021-5.719-2.59-5.719-5.756s2.557-5.735,5.719-5.755c3.17,0.02,5.718,2.589,5.718,5.755 S19.485,21.73,16.315,21.752z')
            span#watchers 1
          span#basic-addon2.input-group-addon
            .pluso(data-background='none;', data-options='medium,round,line,horizontal,nocounter,sepcounter=0,theme=04', data-services='vkontakte,odnoklassniki,facebook,twitter,google,moimir,livejournal,blogger,tumblr,evernote,formspring,email')
          span#basic-addon3.input-group-addon
            a(href='javascript://', onclick="this.style.display='none';getElementById('link').style.display='block';return false;") Cсылка на комнату
            input#link.form-control(type='text', placeholder='ссылка на просмотр', aria-describedby='ссылка на просмотр', value='', onload='javascript:window.location', onclick='this.select();')
      .video
        .row.videoblock.row-same-height
          .col-lg-8.col-xs-12.col-lg-height.col-md-height.videoplayer
            .embed-responsive.embed-responsive-16by9
              iframe#player.embed-responsive-item(frameborder='0', allowfullscreen='1', title='YouTube video player', width='100%', height='100%', src='https://www.youtube.com/embed/Scxs7L0vhZ4?controls=0&rel=0&disablekb=1&fs=0&showinfo=0&enablejsapi=1')
              .elements
                span.playToggle
                  a.play(href='javascript://')
                    svg#Play_1(version='1.1', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', width='14px', height='100%', viewbox='0 0 373.008 373.008', xml:space='preserve')
                      g
                        g#Layer_8_16_
                          path(d='M61.792,2.588C64.771,0.864,68.105,0,71.444,0c3.33,0,6.663,0.864,9.655,2.588l230.116,167.2 c5.963,3.445,9.656,9.823,9.656,16.719c0,6.895-3.683,13.272-9.656,16.713L81.099,370.427c-5.972,3.441-13.334,3.441-19.302,0 c-5.973-3.453-9.66-9.833-9.66-16.724V19.305C52.137,12.413,55.818,6.036,61.792,2.588z')
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                  a.pause(href='javascript://')
                    svg#Pause_1(version='1.1', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', width='14px', height='100%', viewbox='0 0 357 357', xml:space='preserve')
                      g
                        g#pause
                          path(d='M25.5,357h102V0h-102V357z M229.5,0v357h102V0H229.5z')
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                span.time
                  p#currentTime 00:00
                  | /
                  p#duration 00:00
                span.seek
                  .progressBar
                    .bufferBar(style='width: 0%;')
                    .timeBar
                    .timeBar
                span.volume
                  svg#Volume_1(version='1.1', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', width='15px', height='100%', viewbox='0 0 93.038 93.038', xml:space='preserve')
                    g
                      path(d='M46.547,75.521c0,1.639-0.947,3.128-2.429,3.823c-0.573,0.271-1.187,0.402-1.797,0.402c-0.966,0-1.923-0.332-2.696-0.973 l-23.098-19.14H4.225C1.892,59.635,0,57.742,0,55.409V38.576c0-2.334,1.892-4.226,4.225-4.226h12.303l23.098-19.14 c1.262-1.046,3.012-1.269,4.493-0.569c1.481, .695,2.429,2.185,2.429,3.823L46.547,75.521L46.547,75.521z M62.784,68.919 c-0.103,0.007-0.202,0.011-0.304,0.011c-1.116,0-2.192-0.441-2.987-1.237l-0.565-0.567c-1.482-1.479-1.656-3.822-0.408-5.504 c3.164-4.266,4.834-9.323,4.834-14.628c0-5.706-1.896-11.058-5.484-15.478c-1.366-1.68-1.24-4.12,0.291-5.65l0.564-0.565 c0.844-0.844,1.975-1.304,3.199-1.231c1.192,0.06,2.305,0.621,3.061,1.545c4.977,6.09,7.606,13.484,7.606,21.38	c0,7.354-2.325,14.354-6.725,20.24C65.131,68.216,64.007,68.832,62.784,68.919z M80.252,81.976 c-0.764,0.903-1.869,1.445-3.052,1.495c-0.058,0.002-0.117,0.004-0.177,0.004c-1.119,0-2.193-0.442-2.988-1.237l-0.555-0.555 c-1.551-1.55-1.656-4.029-0.246-5.707c6.814-8.104,10.568-18.396,10.568-28.982c0-11.011-4.019-21.611-11.314-29.847 c-1.479-1.672-1.404-4.203,0.17-5.783l0.554-0.555c0.822-0.826,1.89-1.281,3.115-1.242c1.163,0.033,2.263,0.547,3.036,1.417 c8.818,9.928,13.675,22.718,13.675,36.01C93.04,59.783,88.499,72.207,80.252,81.976z')
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                    g
                  .progressBar
                    .timeBar(style='width: 100%;')
                span.hd
                  a(href='javascript://', name='hd') HD
                span.full
                  a.fullscreen(href='javascript://')
                    svg#Full_1(version='1.1', xmlns='http://www.w3.org/2000/svg', xmlns:xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', width='14px', height='100%', viewbox='0 0 28.361 28.361', xml:space='preserve')
                      g
                        g#c115_arrows
                          path(d='M28.36,19.595c0-0.868-0.665-1.57-1.491-1.57c-0.819,0.002-1.492,0.702-1.492,1.57v3.25l-6.018-6.021 c-0.582-0.583-1.524-0.583-2.106,0c-0.582,0.582-0.582,1.527,0,2.109l5.989,5.987h-3.235c-0.881,0.002-1.591,0.669-1.591,1.491 c0,0.824,0.71,1.49,1.591,1.49h6.761c0.881,0,1.59-0.665,1.593-1.49c-0.003-0.022-0.006-0.039-0.009-0.061 c0.003-0.028,0.009-0.058,0.009-0.087v-6.668H28.36z')
                          path(d='M9,16.824l-6.015,6.021v-3.25c0-0.868-0.672-1.568-1.493-1.57c-0.824,0-1.49,0.702-1.49,1.57L0,26.264 c0,0.029,0.008,0.059,0.01,0.087c-0.002,0.021-0.006,0.038-0.008,0.061c0.002,0.825,0.712,1.49,1.592,1.49h6.762 c0.879,0,1.59-0.666,1.59-1.49c0-0.822-0.711-1.489-1.59-1.491H5.121l5.989-5.987c0.58-0.582,0.58-1.527,0-2.109 C10.527,16.241,9.584,16.241,9,16.824z')
                          path(d='M19.359,11.535l6.018-6.017v3.25c0,0.865,0.673,1.565,1.492,1.568c0.826,0,1.491-0.703,1.491-1.568V2.097 c0-0.029-0.006-0.059-0.009-0.085c0.003-0.021,0.006-0.041,0.009-0.062c-0.003-0.826-0.712-1.491-1.592-1.491h-6.761 c-0.881,0-1.591,0.665-1.591,1.491c0,0.821,0.71,1.49,1.591,1.492h3.235l-5.989,5.987c-0.582,0.581-0.582,1.524,0,2.105 C17.835,12.12,18.777,12.12,19.359,11.535z')
                          path(d='M5.121,3.442h3.234c0.879-0.002,1.59-0.671,1.59-1.492c0-0.826-0.711-1.491-1.59-1.491H1.594 c-0.88,0-1.59,0.665-1.592,1.491C0.004,1.971,0.008,1.991,0.01,2.012C0.008,2.038,0,2.067,0,2.097l0.002,6.672 c0,0.865,0.666,1.568,1.49,1.568c0.821-0.003,1.493-0.703,1.493-1.568v-3.25L9,11.535c0.584,0.585,1.527,0.585,2.11,0 c0.58-0.581,0.58-1.524,0-2.105L5.121,3.442z')
                        g#Capa_1_253_
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                      g
                  a.fullscreenExit(href='javascript://')
                    svg(width='28.361', height='28.361', xmlns='http://www.w3.org/2000/svg')
                      g
                        title background
                        rect#canvas_background(fill='none', height='402', width='582', y='-1', x='-1')
                      g
                        title Layer 1
                        g#svg_22(stroke='null')
                          path#svg_2(stroke='null', d='m16.33786,23.45839c0,0.5779 0.41797,1.04528 0.93714,1.04528c0.51477,-0.00133 0.93776,-0.46738 0.93776,-1.04528l0,-2.1638l3.78249,4.00869c0.3658,0.38815 0.95788,0.38815 1.32368,0c0.3658,-0.38749 0.3658,-1.01665 0,-1.40414l-3.76426,-3.98605l2.03329,0c0.55373,-0.00133 0.99999,-0.44541 0.99999,-0.99269c0,-0.54861 -0.44625,-0.99202 -0.99999,-0.99202l-4.24948,0c-0.55374,0 -0.99936,0.44275 -1.00125,0.99202c0.00189,0.01465 0.00377,0.02596 0.00566,0.04061c-0.00189,0.01864 -0.00566,0.03862 -0.00566,0.05792l0,4.43946l0.00063,0z')
                          path#svg_3(stroke='null', d='m7.27681,25.20773l3.7806,-4.00869l0,2.1638c0,0.5779 0.42236,1.04395 0.93839,1.04528c0.51791,0 0.93651,-0.46738 0.93651,-1.04528l0.00126,-4.44012c0,-0.01931 -0.00503,-0.03928 -0.00628,-0.05792c0.00126,-0.01398 0.00377,-0.0253 0.00503,-0.04061c-0.00126,-0.54927 -0.44751,-0.99202 -1.00062,-0.99202l-4.25011,0c-0.55248,0 -0.99936,0.44341 -0.99936,0.99202c0,0.54727 0.44688,0.99135 0.99936,0.99269l2.03329,0l-3.76426,3.98605c-0.36455,0.38749 -0.36455,1.01665 0,1.40414c0.36643,0.38882 0.95913,0.38882 1.3262,0.00067z')
                          path#svg_4(stroke='null', d='m22.08517,7.51966l-3.78248,4.00603l0,-2.1638c0,-0.57591 -0.423,-1.04195 -0.93776,-1.04395c-0.51917,0 -0.93714,0.46804 -0.93714,1.04395l0,4.44145c0,0.01931 0.00377,0.03928 0.00566,0.0566c-0.00189,0.01398 -0.00377,0.02729 -0.00566,0.04127c0.00189,0.54994 0.44751,0.99268 1.00062,0.99268l4.24948,0c0.55373,0 0.99999,-0.44275 0.99999,-0.99268c0,-0.54661 -0.44625,-0.99202 -0.99999,-0.99335l-2.03329,0l3.76426,-3.98605c0.3658,-0.38683 0.3658,-1.01466 0,-1.40148c-0.3658,-0.39015 -0.95788,-0.39015 -1.32368,-0.00067z')
                          path#svg_5(stroke='null', stroke-width='0', d='m9.80527,12.81156l-2.03266,0c-0.55247,0.00133 -0.99936,0.44674 -0.99936,0.99335c0,0.54994 0.44689,0.99269 0.99936,0.99269l4.24949,0c0.5531,0 0.99936,-0.44275 1.00061,-0.99269c-0.00125,-0.01399 -0.00377,-0.0273 -0.00502,-0.04128c0.00125,-0.01731 0.00628,-0.03662 0.00628,-0.05659l-0.00126,-4.44213c0,-0.5759 -0.41859,-1.04395 -0.93651,-1.04395c-0.51602,0.002 -0.93839,0.46805 -0.93839,1.04395l0,2.16381l-3.7806,-4.00536c-0.36706,-0.38948 -0.95976,-0.38948 -1.3262,0c-0.36455,0.38682 -0.36455,1.01466 0,1.40148l3.76426,3.98672z')
                          g#Capa_1_253_(stroke='null')
                          g#svg_6(stroke='null')
                          g#svg_7(stroke='null')
                          g#svg_8(stroke='null')
                          g#svg_9(stroke='null')
                          g#svg_10(stroke='null')
                          g#svg_11(stroke='null')
                          g#svg_12(stroke='null')
                          g#svg_13(stroke='null')
                          g#svg_14(stroke='null')
                          g#svg_15(stroke='null')
                          g#svg_16(stroke='null')
                          g#svg_17(stroke='null')
                          g#svg_18(stroke='null')
                          g#svg_19(stroke='null')
                          g#svg_20(stroke='null')
          .col-lg-4.col-xs-12.col-lg-height.col-md-height.chat
            h3 Чат
            .messages
              p
                span OnPlay
                | : Добро пожаловать на страничку проекта.
            .input-group
              input.form-control(type='text', placeholder='Отправьте соощение...')
              span.input-group-btn
                button.btn.btn-default(type='button') Отправить
      footer
        .row
          .col-lg-12
            p Powered by OnPlay 2015
    script.
          var leftProgress = document.getElementsByClassName('progressBar')[0].getBoundingClientRect().left;
          var widthProgress = document.getElementsByClassName('progressBar')[0].getBoundingClientRect().width;
          var percentProgress = widthProgress / 100;
          var leftVolume = document.getElementsByClassName('progressBar')[1].getBoundingClientRect().left;
          var widthVolume = document.getElementsByClassName('progressBar')[1].getBoundingClientRect().width;
          var percentVolume = widthVolume / 100;
          window.onresize = function(event) {
          leftProgress = document.getElementsByClassName('progressBar')[0].getBoundingClientRect().left;
          widthProgress = document.getElementsByClassName('progressBar')[0].getBoundingClientRect().width;
          percentProgress = widthProgress / 100;
          leftVolume = document.getElementsByClassName('progressBar')[1].getBoundingClientRect().left;
          widthVolume = document.getElementsByClassName('progressBar')[1].getBoundingClientRect().width;
          percentVolume = widthVolume / 100;
          };
          var mousedownProgress = 0;
          var mousedownVolume = 0;
          document.body.addEventListener('mousemove', (function(e) {
          e = e || window.event;
          posX = e.pageX;
          if(mousedownProgress == 1){
          var positionProgress = posX - leftProgress;
          if(posX < 0){
          positionProgress = 0;
          }
          if(posX > widthProgress + leftProgress){
          positionProgress = widthProgress;
          }
          document.getElementsByClassName('timeBar')[1].style.width = positionProgress / percentProgress + '%';
          }
          if(mousedownVolume == 1){
          var positionVolume = posX - leftVolume;
          if(posX < 0){
          positionVolume = 0;
          }
          if(posX > widthVolume + leftVolume){
          positionVolume = widthVolume;
          }
          player.setVolume(positionVolume / percentVolume);
          document.getElementsByClassName('timeBar')[2].style.width = positionVolume / percentVolume + '%';
          }
          }
          ))
          document.getElementsByClassName('progressBar')[0].addEventListener('mousedown', (function(e) {
          mousedownProgress = 1;
          document.body.onselectstart = function(){
          return false;
          }
          document.getElementsByClassName('timeBar')[0].style.display = 'none';
          document.getElementsByClassName('timeBar')[1].style.display = 'block';
          document.body.addEventListener('mouseup', (function scrollDrag(e) {
          mousedownProgress = 0;
          var positionProgress = posX - leftProgress;
          if(posX < 0){
          positionProgress = 0;
          }
          if(posX > widthProgress + leftProgress){
          positionProgress = widthProgress;
          }
          document.getElementsByClassName('timeBar')[1].style.width = positionProgress / percentProgress + '%';
          Seeked(positionProgress / percentProgress * percentVideo);
          playerSeeked(positionProgress / percentProgress * percentVideo);
          document.getElementsByClassName('timeBar')[0].style.display = 'block';
          document.getElementsByClassName('timeBar')[1].style.display = 'none';
          document.body.removeEventListener('mouseup', scrollDrag);
          }
          ))
          }
          ))
          document.getElementsByClassName('progressBar')[1].addEventListener('mousedown', (function(e) {
          mousedownVolume = 1;
          document.body.onselectstart = function(){
          return false;
          }
          document.body.addEventListener('mouseup', (function scrollDragVolume(e) {
          mousedownVolume = 0;
          var positionVolume = posX - leftVolume;
          if(posX < 0){
          positionVolume = 0;
          }
          if(posX > widthVolume + leftVolume){
          positionVolume = widthVolume;
          }
          document.getElementsByClassName('timeBar')[2].style.width = positionVolume / percentVolume + '%';
          player.setVolume(positionVolume / percentVolume);
          document.body.removeEventListener('mouseup', scrollDragVolume);
          }
          ))
          }
          ))
          function requestBufferingTime(){
          var currentTime = player.getCurrentTime();
          document.getElementById('currentTime').innerHTML = fromSeconds(currentTime);
          document.getElementsByClassName('bufferBar')[0].style.width = player.getVideoLoadedFraction() * 100 + '%';
          document.getElementsByClassName('timeBar')[0].style.width = currentTime / percentVideo + '%';
          }
          document.getElementsByClassName('play')[0].addEventListener('click', function() {
          player.playVideo();
          })
          document.getElementsByClassName('pause')[0].addEventListener('click', (function() {
          player.pauseVideo();
          }))
          document.getElementsByClassName('fullscreen')[0].addEventListener("click", function() {
          var element = document.getElementsByClassName('videoplayer')[0];
          if(element.requestFullscreen) {
          element.requestFullscreen();
          } else if(element.mozRequestFullScreen) {
          element.mozRequestFullScreen();
          } else if(element.webkitRequestFullscreen) {
          element.webkitRequestFullscreen();
          } else if(element.msRequestFullscreen) {
          element.msRequestFullscreen();
          }
          })
          document.getElementsByClassName('fullscreenExit')[0].addEventListener("click", function() {
          if(document.exitFullscreen) {
          document.exitFullscreen();
          } else if(document.mozCancelFullScreen) {
          document.mozCancelFullScreen();
          } else if(document.webkitExitFullscreen) {
          document.webkitExitFullscreen();
          } else if (document.msExitFullscreen) {
          document.msExitFullscreen();
          }
          })
          function startFullScreen(){
          document.getElementsByClassName('fullscreen')[0].style.display = 'none';
          document.getElementsByClassName('fullscreenExit')[0].style.display = 'block';
          document.getElementsByClassName('videoplayer')[0].style.border = 'none';
          document.getElementsByClassName('embed-responsive embed-responsive-16by9')[0].className = 'fullScreenPlayer';
          }
          function exitFullScreen(){
          document.getElementsByClassName('fullscreen')[0].style.display = 'block';
          document.getElementsByClassName('fullscreenExit')[0].style.display = 'none';
          document.getElementsByClassName('videoplayer')[0].style.border = '1px solid #e7e7e7';
          document.getElementsByClassName('fullScreenPlayer')[0].className = 'embed-responsive embed-responsive-16by9';
          }
          document.addEventListener("fullscreenchange", function() {
          if(document.fullscreenElement){
          startFullScreen();
          } else{
          exitFullScreen();
          }
          });
          document.addEventListener("mozfullscreenchange", function() {
          if(document.mozFullScreenElement){
          startFullScreen();
          } else{
          exitFullScreen();
          }
          });
          document.addEventListener("webkitfullscreenchange", function() {
          if(document.webkitFullscreenElement){
          startFullScreen();
          } else{
          exitFullScreen();
          }
          });
          document.addEventListener("msfullscreenchange", function() {
          if(document.msFullscreenElement){
          startFullScreen();
          } else{
          exitFullScreen();
          }});
        script(type='text/javascript').
          (function() {
          if (window.pluso)if (typeof window.pluso.start == "function") return;
          if (window.ifpluso==undefined) { window.ifpluso = 1;
          var d = document, s = d.createElement('script'), g = 'getElementsByTagName';
          s.type = 'text/javascript'; s.charset='UTF-8'; s.async = true;
          s.src = ('https:' == window.location.protocol ? 'https' : 'http')  + '://share.pluso.ru/pluso-like.js';
          var h=d[g]('body')[0];
          h.appendChild(s);
          }})();